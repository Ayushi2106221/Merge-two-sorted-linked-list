Node* sortedMerge(Node* head1, Node* head2)  
{  
    
    
    //if first list is null;
    if(head1==NULL)
    return head2;
    
    //if second list is null
    if(head2==NULL)
    return head1;
    Node* first=NULL;
    Node* second=NULL;
    
    if(head1->data<=head2->data){
        first=head1;
        second=head2;
        }
    else{
        first=head2;
        second=head1;
    }    
    if(first->next==NULL){
        first->next=second;
        return first;
    }
    Node* curr1=first;
    Node* next1=first->next;
    Node* curr2=second;
    Node* next2=NULL;
    while(next1!=NULL && curr2!=NULL){
        if(curr2->data>=curr1->data && curr2->data<next1->data){
            curr1->next=curr2;
            next2=curr2->next;
            curr2->next=next1;
            curr1=curr2;
            curr2=next2;
        }
        else{
            curr1=curr1->next;
            next1=next1->next;
            if(next1==NULL){
                curr1->next=curr2;
                return first;
            }
        }
    }
    return first;
}  
